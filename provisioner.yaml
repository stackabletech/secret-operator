apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: secret-provisioner
spec:
  selector:
    matchLabels:
      app: secret-provisioner
  template:
    metadata:
      labels:
        app: secret-provisioner
    spec:
      containers:
      - name: provisioner
        image: docker.stackable.tech/teozkr/secret-provisioner
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
        - name: CSI_ENDPOINT
          value: /csi/csi.sock
        volumeMounts:
        - name: csi
          mountPath: /csi
        - name: mountpoint
          mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
      - name: node-driver-registrar
        # image: csi-node-driver-registrar
        # imagePullPolicy: IfNotPresent
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
        args:
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/secrets.stackable.tech/csi.sock
        volumeMounts:
        - name: registration-sock
          mountPath: /registration
        - name: csi
          mountPath: /csi
      volumes:
      - name: registration-sock
        hostPath:
          path: /var/lib/kubelet/plugins_registry/secrets.stackable.tech-reg.sock
      - name: csi
        hostPath:
          path: /var/lib/kubelet/plugins/secrets.stackable.tech/
      - name: mountpoint
        hostPath:
          path: /var/lib/kubelet/pods/
      serviceAccountName: secret-provisioner
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-provisioner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-provisioner
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - create
  - get
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  verbs:
  - get
- apiGroups:
  - secrets.stackable.tech
  resources:
  - secretclasses
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-provisioner
subjects:
- apiGroup: ""
  kind: ServiceAccount
  namespace: default
  name: secret-provisioner
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: secrets.stackable.tech
spec:
  attachRequired: false
  podInfoOnMount: true
  fsGroupPolicy: File
  tokenRequests:
  - audience: secrets.stackable.tech/consumer
  volumeLifecycleModes:
  - Ephemeral
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: tls
spec:
  backend:
    autoTls:
      ca:
        secret:
          name: secret-provisioner-tls-ca
          namespace: default
