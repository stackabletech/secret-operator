# Shell container that injects an arbitrary user-declared secret at /secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-consumer-shell
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secret-consumer-shell
  template:
    metadata:
      labels:
        app: secret-consumer-shell
    spec:
      containers:
        - name: shell
          image: archlinux
          stdin: true
          tty: true
          volumeMounts:
            - name: secret
              mountPath: /secret
      terminationGracePeriodSeconds: 1
      volumes:
        - name: secret
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  # Use search parameters declared in SecretClass/secret to resolve this secret
                  secrets.stackable.tech/class: secret
                  # Uncomment if the secret depends on the node,
                  # for a `k8sSearch` `SecretClass` this means that the the `Secret` must have the label `secrets.stackable.tech/node: ${pod.spec.nodeName}`
                  # secrets.stackable.tech/scope: node
              spec:
                storageClassName: secrets.stackable.tech
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
---
# SecretClass that searches the pod's namespace for Secret objects labeled with `type: custom-secret`
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: secret
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
# A Secret that matches SecretClass/secret, for the Node kind-control-plane
apiVersion: v1
kind: Secret
metadata:
  name: secret-consumer-shell-secret
  labels:
    secrets.stackable.tech/class: secret
    # Uncomment if you want to pin the consuming Pods to a specific Node,
    # e.g. because the credentials in this Secret are only valid for a specific node
    # secrets.stackable.tech/node: kind-control-plane
    type: custom-secret
stringData:
  boo: spooky, indeed!
