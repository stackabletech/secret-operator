---
# Source: secret-operator/templates/secret_migration_job.yaml
# Migrates the TLS CA key pair from the hard-coded default namespace to the operator namespace
# See https://github.com/stackabletech/secret-operator/issues/453
apiVersion: batch/v1
kind: Job
metadata:
  name: secret-operator-secret-migration
  labels:
    app.kubernetes.io/name: secret-operator
    app.kubernetes.io/instance: secret-operator
    stackable.tech/vendor: Stackable
    app.kubernetes.io/version: "24.11.0"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
    spec:
      serviceAccountName: secret-operator-secret-migration-serviceaccount
      containers:
        - name: migrate-secret
          image: "quay.io/stackable/tools@sha256:bb02df387d8f614089fe053373f766e21b7a9a1ad04cb3408059014cb0f1388e"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          command:
            - bash
            - -c
          args:
            - |
              #!/bin/bash
              set -euo pipefail
              SOURCE_NAMESPACE=default
              TARGET_NAMESPACE=$NAMESPACE

              # only continue if secret exists
              if source_ca_secret="$(kubectl get secret -n $SOURCE_NAMESPACE secret-provisioner-tls-ca -o json)"; then
                echo "secret exists in namespace $SOURCE_NAMESPACE"
                # only continue if secret in target namespace does NOT exist
                if ! kubectl get secret -n $TARGET_NAMESPACE secret-provisioner-tls-ca; then
                  echo "secret does not exist in namespace $TARGET_NAMESPACE"
                  # copy secret from default to default
                  echo "$source_ca_secret" | jq 'del(.metadata["namespace","creationTimestamp","resourceVersion","selfLink","uid"])' | kubectl apply -n $TARGET_NAMESPACE -f -
                fi
              fi
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      restartPolicy: Never
