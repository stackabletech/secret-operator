---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nginx
spec:
  replicas: 1
  serviceName: ""
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccount: integration-tests-sa
      securityContext:
        runAsUser: 0
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - name: https
          containerPort: 443
        volumeMounts:
        - name: listener
          mountPath: /usr/share/nginx/html/listener
        - name: tls
          mountPath: /stackable/tls
        - name: config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: tls
        ephemeral:
          volumeClaimTemplate:
            metadata:
              annotations:
                secrets.stackable.tech/class: tls
                secrets.stackable.tech/scope: listener-volume=listener
            spec:
              storageClassName: secrets.stackable.tech
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: "1"
      - name: config
        configMap:
          name: nginx-config
  volumeClaimTemplates:
  - metadata:
      name: listener
      annotations:
        listeners.stackable.tech/listener-class: external-unstable
    spec:
      accessModes:
      - ReadWriteMany
      storageClassName: listeners.stackable.tech
      resources:
        requests:
          storage: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen       443 ssl;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        ssl_certificate /stackable/tls/tls.crt;
        ssl_certificate_key /stackable/tls/tls.key;
    }
